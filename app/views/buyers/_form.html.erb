<%= simple_form_for(buyer) do |f| %>
  <%= f.error_notification %>
  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

  <div class="form-inputs">
    <%= f.input :latitude, as: :hidden, input_html: {id: 'latitude_field'} %>
    <%= f.input :longitude, as: :hidden, input_html: {id: 'longitude_field'} %>
    <%= f.input :name, label: 'Ism' %><br/>
    <%= f.input :phone_number, label: 'Telefon nomer' %>
    <% unless buyer.persisted? %>
      <%= f.input :debt_in_uzs, label: "So'mda qarzi", as: :numeric %>
      <%= f.input :debt_in_usd, label: false, as: :hidden %>
    <% end %>
    <%= f.input :comment, label: 'Kommentariya' %><br><br/>
    <%= f.input :images, input_html: { multiple: true, accept: "image/*" }, label: 'Rasm yuklash', required: true %><br/>
    <div id="map" style="height: 400px;"></div>
  </div>

  <div class="form-actions">
    <%= f.button :submit, 'Saqlash' %>
  </div>
<% end %>
<div id="map-container">
  <input class="form-control" placeholder="Поиск" id="search_input" type="text">
</div>

<script>
  var map;
  var marker;
  var searchInput;
  function initMap() {
    // Check if Google Maps API is available
    if (typeof google === 'undefined' || typeof google.maps === 'undefined') {
      console.error('Google Maps API is not loaded.');
      return;
    }

    // Create map object
    map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: <%= buyer.latitude.nil? ? 39.6508 : buyer.latitude %>, lng: <%= buyer.longitude.nil? ? 66.9654 : buyer.longitude %> },
      zoom: 13
    });
    // Create marker object
    searchInput = document.getElementById("map-container");
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(searchInput);

    marker = new google.maps.Marker({
      position: { lat: <%= buyer.latitude.nil? ? 39.6508 : buyer.latitude %>, lng: <%= buyer.longitude.nil? ? 66.9654 : buyer.longitude %> },
      map: map,
      draggable: false // Make the marker non-draggable
    });

    // Add click event listener to map to update marker position
    google.maps.event.addListener(map, 'click', function(event) {
      // Update marker position
      marker.setPosition(event.latLng);
      // Update latitude and longitude fields
      document.getElementById("latitude_field").value = event.latLng.lat();
      document.getElementById("longitude_field").value = event.latLng.lng();
    });

    // Initialize the Places Autocomplete service
    var input = document.getElementById('search_input');
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    // Add event listener to handle place selection
    autocomplete.addListener('place_changed', function() {
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        console.error("Place details not found for the input: '" + place.name + "'");
        return;
      }
      // Update marker position
      marker.setPosition(place.geometry.location);
      // Update latitude and longitude fields
      document.getElementById("latitude_field").value = place.geometry.location.lat();
      document.getElementById("longitude_field").value = place.geometry.location.lng();
      // Center map on selected place
      map.setCenter(place.geometry.location);
      map.setZoom(15); // Optional: Adjust zoom level as needed
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCrf73WQ7VitOY7_PP0pSGmeBDw-Tiz38&libraries=places&callback=initMap"></script>
